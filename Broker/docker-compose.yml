version: '3'

services:
  # EMQX Service (MQTT Broker)
  emqx1:
    image: emqx:latest
    container_name: emx1
    hostname: emx1
    environment:
      - "EMQX_NODE_NAME=emx@node1.emx"
      - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
      - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.com,emqx@node2.emqx.com]"
    ports:
      - "1881:1883"
      - "18083:18083" 
    volumes:
      - ./emx1:/opt/emqx/data 
    networks:
      - iot-network

  emqx2:
    image: emqx:latest
    container_name: emx2
    hostname: emx2
    environment:
      - "EMQX_NODE_NAME=emx@node2.emx"
      - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
      - "EMQX_CLUSTER__STATIC__SEEDS=[emx@node1.emx,emx@node2.emx]"  
    ports:
      - "1882:1883"
      - "28083:18083"
    volumes:
      - ./emx2:/opt/emqx/data 
    networks:
      - iot-network

  haproxy:
    image: haproxy
    container_name: mqtt-haproxy
    depends_on:
      - emqx1
      - emqx2
    ports:
      - "1883:1883"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - iot-network

  # MongoDB Service
  mongo:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - ./db:/data/db
    ports:
      - "5698:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - iot-network

  # NodeRed Service
  nodered:
    image: nodered/node-red
    container_name: nodered
    volumes:
      - ./nodered:/data
    ports:
      - "1880:1880"
    networks:
      - iot-network

networks:
  iot-network:
    driver: bridge

