version: '3'

services:
  # EMQX Service (MQTT Broker)
  emqx1:
    image: emqx:latest
    container_name: emx1
    hostname: emx1
    environment:
      - "EMQX_NODE_NAME=emx@node1.emx"
      - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
      - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.com,emqx@node2.emqx.com]"
    ports:
      - "1881:1883"
      - "18083:18083" 
    volumes:
      - ./emx1:/opt/emqx/data 
    networks:
      - iot-network

  emqx2:
    image: emqx:latest
    container_name: emx2
    hostname: emx2
    environment:
      - "EMQX_NODE_NAME=emx@node2.emx"
      - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
      - "EMQX_CLUSTER__STATIC__SEEDS=[emx@node1.emx,emx@node2.emx]"  
    ports:
      - "1882:1883"
      - "28083:18083"
    volumes:
      - ./emx2:/opt/emqx/data 
    networks:
      - iot-network

  haproxy:
    image: haproxy
    container_name: haproxy
    depends_on:
      - emqx1
      - emqx2
    ports:
      - "1883:1883"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - iot-network

  # DB Service
  influxdb:
    container_name: influxdb
    image: influxdb:latest
    environment: 
       # Use these same configurations parameters in your telegraf configuration, mytelegraf.conf.
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=Aa@12345678
      - DOCKER_INFLUXDB_INIT_ORG=linuxsol
      - DOCKER_INFLUXDB_INIT_BUCKET=mqtt
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken
    volumes:
      - ./data:/var/lib/influxdb2:rw
    ports:
      - "8086:8086"
    networks:
      - iot-network

  ## Telegraf
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      #  Sync timezone with host
      - /etc/localtime:/etc/localtime:ro
      #  Map Telegraf configuration file
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    restart: unless-stopped
    depends_on:
      - influxdb
    networks:
      - iot-network

        
  # NodeRed Service
  nodered:
    image: nodered/node-red
    container_name: nodered
    volumes:
      - ./nodered:/data
    ports:
      - "1880:1880"
    networks:
      - iot-network

networks:
  iot-network:
    driver: bridge

